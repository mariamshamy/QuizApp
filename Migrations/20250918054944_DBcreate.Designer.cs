// <auto-generated />
using System;
using MariamRefaatExamProject.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MariamRefaatExamProject.Migrations
{
    [DbContext(typeof(ExamContext))]
    [Migration("20250918054944_DBcreate")]
    partial class DBcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MariamRefaatExamProject.Models.Choice", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("isCorrect")
                        .HasColumnType("bit");

                    b.Property<string>("option")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("questionID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("questionID");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("MariamRefaatExamProject.Models.Exam", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("creationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("score")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("StudentID");

                    b.ToTable("exams");
                });

            modelBuilder.Entity("MariamRefaatExamProject.Models.ExamQuestions", b =>
                {
                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("ExamId", "QuestionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("ExamQuestions");
                });

            modelBuilder.Entity("MariamRefaatExamProject.Models.Question", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("MariamRefaatExamProject.Models.Student", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("MariamRefaatExamProject.Models.Choice", b =>
                {
                    b.HasOne("MariamRefaatExamProject.Models.Question", "question")
                        .WithMany("choices")
                        .HasForeignKey("questionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("question");
                });

            modelBuilder.Entity("MariamRefaatExamProject.Models.Exam", b =>
                {
                    b.HasOne("MariamRefaatExamProject.Models.Student", "Student")
                        .WithMany("exams")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("MariamRefaatExamProject.Models.ExamQuestions", b =>
                {
                    b.HasOne("MariamRefaatExamProject.Models.Exam", "Exam")
                        .WithMany("examQuestions")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MariamRefaatExamProject.Models.Question", "Question")
                        .WithMany("examQuestions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("MariamRefaatExamProject.Models.Exam", b =>
                {
                    b.Navigation("examQuestions");
                });

            modelBuilder.Entity("MariamRefaatExamProject.Models.Question", b =>
                {
                    b.Navigation("choices");

                    b.Navigation("examQuestions");
                });

            modelBuilder.Entity("MariamRefaatExamProject.Models.Student", b =>
                {
                    b.Navigation("exams");
                });
#pragma warning restore 612, 618
        }
    }
}
